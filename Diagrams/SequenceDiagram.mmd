sequenceDiagram
    participant User as Utilisateur
    participant Menu as Menu
    participant Game as Game
    participant FileParser as FileParser
    participant FileVerify as FileVerify
    participant Grid as Grille
    participant GridVerify as VérificationGrille
    participant UnitaryTest as TestUnitaire
    participant Observer as Observateur

    %% Étape 1 : Configuration utilisateur
    User ->> Menu: ShowMenu()
    Menu -->> User: getFilePath(), getIterations(), getDelay(), getDisplayChoice()
    Menu ->> Game: Game(filePath, iterations, delay)

    %% Étape 2 : Chargement et validation des données
    Game ->> FileParser: GetData()
    FileParser -->> Game: Return grid data
    Game ->> FileVerify: Verify(data, expectedLength, expectedWidth)
    FileVerify -->> Game: GetSizeOk(), GetValuesOk()

    %% Étape 3 : Initialisation et vérification de la grille
    alt Validation réussie
        Game ->> Grid: CreateGrid(data)
        Grid -->> Game: Grid ready
        Game ->> GridVerify: VerifyGrid(data)
        GridVerify -->> Game: IsEmpty(), IsEqual()
    else Erreur de validation
        Game ->> User: ShowErrorMessage("Invalid file data")
    end

    %% Étape 4 : Attachement des observateurs
    loop Attach observers
        Game ->> Observer: attach(ConsoleObserver)
        Game ->> Observer: attach(SFMLObserver)
        Game ->> Observer: attach(FileObserver)
    end

    %% Étape 5 : Tests unitaires
    par Tests de validation
        UnitaryTest ->> GridVerify: TestGridValidation()
        UnitaryTest ->> FileVerify: TestFileHandling()
        UnitaryTest ->> Game: TestGameLogic()
    end

    %% Étape 6 : Exécution du jeu
    loop Run iterations
        Game ->> Grid: UpdateGrid()
        Grid -->> Game: Return updated state
        Game ->> GridVerify: VerifyGrid(state)
        GridVerify -->> Game: IsStatic(), IsEmpty()
        Game ->> Observer: notify()
        Observer -->> User: DisplayUpdate(state)
    end

    %% Étape 7 : Fin du jeu
    Game ->> User: ShowMessage("Jeu terminé")
